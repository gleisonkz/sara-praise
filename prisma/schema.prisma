datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Ministry {
  ministryID Int    @id @default(autoincrement())
  name       String
  ownerID    Int
  owner      User   @relation(fields: [ownerID], references: [userID])
  Songs       Song[]
  Members    Member[]
  Scales     Scale[]
  SongKeys   SongKey[]
}

model User {
  userID   Int        @id @default(autoincrement())
  name     String
  email    String     @unique
  password String
  imageURL String     @default("")
  Ministry Ministry[]
}

model Member {
  memberID    Int           @id @default(autoincrement())
  ministryID  Int           @unique

  userID      Int
  roles       Role[]
  ministry    Ministry     @relation(fields: [ministryID], references: [ministryID] , onDelete: Cascade)
  permissions Permission[]
  Participant Participant[]
}


model Role {
  roleID  Int    @id @default(autoincrement())
  name    String
  iconUrl String

  Member   Member? @relation(fields: [memberID], references: [memberID])
  memberID Int?
}

model Permission {
  permissionID Int     @id @default(autoincrement())
  name         String
  Member       Member? @relation(fields: [memberID], references: [memberID])
  memberID     Int?
}



model Participant {
  participantID Int    @id @default(autoincrement())
  memberID      Int
  scaleID       Int
  Member        Member @relation(fields: [memberID], references: [memberID])
  Scale         Scale? @relation(fields: [scaleScaleID], references: [scaleID])
  scaleScaleID  Int?
}




model SongKey {
  songKeyID Int    @id @default(autoincrement())
  name      String
  Song      Song[]
  ministryID Int
  ministry Ministry  @relation(fields: [ministryID], references: [ministryID])
}


model Scale {
  scaleID Int      @id @default(autoincrement())
  title   String
  date    DateTime
  notes   String

  ministryID Int
  ministry Ministry  @relation(fields: [ministryID], references: [ministryID])
  participants Participant[]
  songs        Song[]
}

model Song {
  songID       Int      @id @default(autoincrement())
  title        String
  tags         String[]
  observations String
  audioUrl     String
  youtubeUrl   String
  lyricUrl     String
  chordsUrl    String

  artistID   Int
  keyID      Int
  ministryID Int
  artist     Artist   @relation(fields: [artistID], references: [artistID])
  key        SongKey  @relation(fields: [keyID], references: [songKeyID])
  ministry   Ministry @relation(fields: [ministryID], references: [ministryID])
  Scale      Scale[]
}

model Artist {
  artistID Int    @id @default(autoincrement())
  name     String
  Song     Song[]
}
